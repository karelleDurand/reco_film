{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "1fa8a9e7-8227-4525-ad7b-a9245b3c927a",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.neighbors import NearestNeighbors"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c2acd51e-0a9c-4b18-a6be-387dcf73e6c5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>tconst</th>\n",
       "      <th>primaryTitle</th>\n",
       "      <th>startYear</th>\n",
       "      <th>runtimeMinutes</th>\n",
       "      <th>averageRating</th>\n",
       "      <th>numVotes</th>\n",
       "      <th>Action</th>\n",
       "      <th>Adult</th>\n",
       "      <th>Adventure</th>\n",
       "      <th>...</th>\n",
       "      <th>_th</th>\n",
       "      <th>_tl</th>\n",
       "      <th>_tr</th>\n",
       "      <th>_uk</th>\n",
       "      <th>_ur</th>\n",
       "      <th>_vi</th>\n",
       "      <th>_wo</th>\n",
       "      <th>_xx</th>\n",
       "      <th>_zh</th>\n",
       "      <th>_zu</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Kate et Léopold</td>\n",
       "      <td>tt0035423</td>\n",
       "      <td>Kate &amp; Leopold</td>\n",
       "      <td>2001</td>\n",
       "      <td>118</td>\n",
       "      <td>6.4</td>\n",
       "      <td>83389</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>L'éveil de la bête</td>\n",
       "      <td>tt0062690</td>\n",
       "      <td>Awakening of the Beast</td>\n",
       "      <td>1970</td>\n",
       "      <td>93</td>\n",
       "      <td>5.9</td>\n",
       "      <td>1157</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Le boucher</td>\n",
       "      <td>tt0064106</td>\n",
       "      <td>Le Boucher</td>\n",
       "      <td>1970</td>\n",
       "      <td>93</td>\n",
       "      <td>7.4</td>\n",
       "      <td>8535</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Les choses de la vie</td>\n",
       "      <td>tt0064165</td>\n",
       "      <td>The Things of Life</td>\n",
       "      <td>1970</td>\n",
       "      <td>89</td>\n",
       "      <td>7.5</td>\n",
       "      <td>4767</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Le cerveau d'acier</td>\n",
       "      <td>tt0064177</td>\n",
       "      <td>Colossus: The Forbin Project</td>\n",
       "      <td>1970</td>\n",
       "      <td>100</td>\n",
       "      <td>7.1</td>\n",
       "      <td>8878</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26048</th>\n",
       "      <td>Eight for Silver</td>\n",
       "      <td>tt9907782</td>\n",
       "      <td>The Cursed</td>\n",
       "      <td>2021</td>\n",
       "      <td>111</td>\n",
       "      <td>6.3</td>\n",
       "      <td>4382</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26049</th>\n",
       "      <td>Le lion</td>\n",
       "      <td>tt9908390</td>\n",
       "      <td>Le lion</td>\n",
       "      <td>2020</td>\n",
       "      <td>95</td>\n",
       "      <td>5.4</td>\n",
       "      <td>1063</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26050</th>\n",
       "      <td>Zalim Istanbul</td>\n",
       "      <td>tt9910728</td>\n",
       "      <td>Zalim Istanbul</td>\n",
       "      <td>2019</td>\n",
       "      <td>120</td>\n",
       "      <td>6.1</td>\n",
       "      <td>860</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26051</th>\n",
       "      <td>De Beentjes van Sint-Hildegard</td>\n",
       "      <td>tt9911196</td>\n",
       "      <td>The Marriage Escape</td>\n",
       "      <td>2020</td>\n",
       "      <td>103</td>\n",
       "      <td>7.5</td>\n",
       "      <td>3551</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26052</th>\n",
       "      <td>Les sorcières d'Akelarre</td>\n",
       "      <td>tt9916362</td>\n",
       "      <td>Coven</td>\n",
       "      <td>2020</td>\n",
       "      <td>92</td>\n",
       "      <td>6.4</td>\n",
       "      <td>4520</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26053 rows × 350 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                title     tconst  \\\n",
       "0                     Kate et Léopold  tt0035423   \n",
       "1                  L'éveil de la bête  tt0062690   \n",
       "2                          Le boucher  tt0064106   \n",
       "3                Les choses de la vie  tt0064165   \n",
       "4                  Le cerveau d'acier  tt0064177   \n",
       "...                               ...        ...   \n",
       "26048                Eight for Silver  tt9907782   \n",
       "26049                         Le lion  tt9908390   \n",
       "26050                  Zalim Istanbul  tt9910728   \n",
       "26051  De Beentjes van Sint-Hildegard  tt9911196   \n",
       "26052        Les sorcières d'Akelarre  tt9916362   \n",
       "\n",
       "                       primaryTitle  startYear  runtimeMinutes  averageRating  \\\n",
       "0                    Kate & Leopold       2001             118            6.4   \n",
       "1            Awakening of the Beast       1970              93            5.9   \n",
       "2                        Le Boucher       1970              93            7.4   \n",
       "3                The Things of Life       1970              89            7.5   \n",
       "4      Colossus: The Forbin Project       1970             100            7.1   \n",
       "...                             ...        ...             ...            ...   \n",
       "26048                    The Cursed       2021             111            6.3   \n",
       "26049                       Le lion       2020              95            5.4   \n",
       "26050                Zalim Istanbul       2019             120            6.1   \n",
       "26051           The Marriage Escape       2020             103            7.5   \n",
       "26052                         Coven       2020              92            6.4   \n",
       "\n",
       "       numVotes  Action  Adult  Adventure  ...  _th  _tl  _tr  _uk  _ur  _vi  \\\n",
       "0         83389       0      0          0  ...    0    0    0    0    0    0   \n",
       "1          1157       0      0          0  ...    0    0    0    0    0    0   \n",
       "2          8535       0      0          0  ...    0    0    0    0    0    0   \n",
       "3          4767       0      0          0  ...    0    0    0    0    0    0   \n",
       "4          8878       0      0          0  ...    0    0    0    0    0    0   \n",
       "...         ...     ...    ...        ...  ...  ...  ...  ...  ...  ...  ...   \n",
       "26048      4382       0      0          0  ...    0    0    0    0    0    0   \n",
       "26049      1063       0      0          0  ...    0    0    0    0    0    0   \n",
       "26050       860       0      0          0  ...    0    0    0    0    0    0   \n",
       "26051      3551       0      0          0  ...    0    0    0    0    0    0   \n",
       "26052      4520       0      0          0  ...    0    0    0    0    0    0   \n",
       "\n",
       "       _wo  _xx  _zh  _zu  \n",
       "0        0    0    0    0  \n",
       "1        0    0    0    0  \n",
       "2        0    0    0    0  \n",
       "3        0    0    0    0  \n",
       "4        0    0    0    0  \n",
       "...    ...  ...  ...  ...  \n",
       "26048    0    0    0    0  \n",
       "26049    0    0    0    0  \n",
       "26050    0    0    0    0  \n",
       "26051    0    0    0    0  \n",
       "26052    0    0    0    0  \n",
       "\n",
       "[26053 rows x 350 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "table_KNN = pd.read_csv(\"C:/Users/karelle/OneDrive/Documents/Projet 2/Base de données/fichiers csv/version 2/table_KNN.csv\", sep = ';', index_col = 0)\n",
    "table_KNN = table_KNN.drop(columns = ['genres','decade','directors'])\n",
    "table_KNN"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "78533906-e4b6-4b3e-b689-b43615354028",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Entrez un titre de film :  dirty dancing\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4351\n",
      "title             Dirty Dancing\n",
      "tconst                tt0092890\n",
      "primaryTitle      Dirty Dancing\n",
      "startYear                  1987\n",
      "runtimeMinutes              100\n",
      "                      ...      \n",
      "_vi                           0\n",
      "_wo                           0\n",
      "_xx                           0\n",
      "_zh                           0\n",
      "_zu                           0\n",
      "Name: 4351, Length: 350, dtype: object\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>title</th>\n",
       "      <th>startYear</th>\n",
       "      <th>runtimeMinutes</th>\n",
       "      <th>averageRating</th>\n",
       "      <th>numVotes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8288</th>\n",
       "      <td>Wedding Singer : Demain on se marie !</td>\n",
       "      <td>1998</td>\n",
       "      <td>97</td>\n",
       "      <td>6.9</td>\n",
       "      <td>147055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6164</th>\n",
       "      <td>Wayne's World</td>\n",
       "      <td>1992</td>\n",
       "      <td>94</td>\n",
       "      <td>7.0</td>\n",
       "      <td>154089</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10756</th>\n",
       "      <td>8 Mile</td>\n",
       "      <td>2002</td>\n",
       "      <td>110</td>\n",
       "      <td>7.2</td>\n",
       "      <td>277959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3266</th>\n",
       "      <td>Flashdance</td>\n",
       "      <td>1983</td>\n",
       "      <td>95</td>\n",
       "      <td>6.2</td>\n",
       "      <td>52106</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10028</th>\n",
       "      <td>Billy Elliot</td>\n",
       "      <td>2000</td>\n",
       "      <td>110</td>\n",
       "      <td>7.7</td>\n",
       "      <td>133162</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                       title  startYear  runtimeMinutes  \\\n",
       "8288   Wedding Singer : Demain on se marie !       1998              97   \n",
       "6164                           Wayne's World       1992              94   \n",
       "10756                                 8 Mile       2002             110   \n",
       "3266                              Flashdance       1983              95   \n",
       "10028                           Billy Elliot       2000             110   \n",
       "\n",
       "       averageRating  numVotes  \n",
       "8288             6.9    147055  \n",
       "6164             7.0    154089  \n",
       "10756            7.2    277959  \n",
       "3266             6.2     52106  \n",
       "10028            7.7    133162  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# définition des X et y\n",
    "X = table_KNN.drop(columns=['title','tconst','primaryTitle'])\n",
    "\n",
    "# standardisation\n",
    "scaler = StandardScaler()\n",
    "X_scaled = scaler.fit_transform(X)\n",
    "X_scaled = pd.DataFrame(X_scaled, columns = X.columns)\n",
    "\n",
    "X_scaled_poids = pd.DataFrame(X_scaled)\n",
    "\n",
    "#attribution des poids\n",
    "X_scaled_poids[\"numVotes\"] = X_scaled_poids[\"numVotes\"]*0.9\n",
    "X_scaled_poids[\"averageRating\"] = X_scaled_poids[\"averageRating\"]*0.9\n",
    "X_scaled_poids[\"runtimeminutes\"] = X_scaled_poids[\"runtimeMinutes\"]*0.9\n",
    "X_scaled_poids[\"startyear\"] = X_scaled_poids[\"startYear\"]*0.9\n",
    "X_scaled_poids.iloc[:,7:8] = X_scaled_poids.iloc[:,7:8]*0.7             #action\n",
    "X_scaled_poids.iloc[:,9:10] = X_scaled_poids.iloc[:,9:10]*0.3           #aventure\n",
    "X_scaled_poids.iloc[:,10:11] = X_scaled_poids.iloc[:,10:11]*0.5         #animation\n",
    "X_scaled_poids.iloc[:,12:13] = X_scaled_poids.iloc[:,12:13]*0.1         #comedie\n",
    "X_scaled_poids.iloc[:,13:14] = X_scaled_poids.iloc[:,13:14]*0.5         #crime\n",
    "X_scaled_poids.iloc[:,14:15] = X_scaled_poids.iloc[:,14:15]*0.5         #documentaire\n",
    "X_scaled_poids.iloc[:,15:16] = X_scaled_poids.iloc[:,15:16]*0.1         #drame\n",
    "X_scaled_poids.iloc[:,16:17] = X_scaled_poids.iloc[:,16:17]*0.4         #family\n",
    "X_scaled_poids.iloc[:,24:25] = X_scaled_poids.iloc[:,24:25]*0.3         #mistère\n",
    "X_scaled_poids.iloc[:,28:29] = X_scaled_poids.iloc[:,28:29]*0.3         #sci_fi\n",
    "X_scaled_poids.iloc[:,35:285] = X_scaled_poids.iloc[:,35:285]*0.4       #réalisateurs\n",
    "X_scaled_poids.iloc[:,285:] = X_scaled_poids.iloc[:,285:]*0.4           #pays d'origine\n",
    "\n",
    "\n",
    "#KNN\n",
    "end_of_game=False\n",
    "while not end_of_game:\n",
    "    film = str(input(\"Entrez un titre de film : \"))\n",
    "    if pd.DataFrame(table_KNN[\"title\"].str.contains(film, case=False)).any()[0]!=True:\n",
    "        end_of_game=False\n",
    "    else:\n",
    "        indice = table_KNN.loc[table_KNN[\"title\"].str.contains(film, case=False)].index[0]\n",
    "        distanceKNN = NearestNeighbors(n_neighbors=9, metric='minkowski', p=2).fit(X_scaled_poids)\n",
    "        dist = distanceKNN.kneighbors(X_scaled_poids.loc[[indice]])\n",
    "        proposition = table_KNN.loc[list(dist[1][0])].drop(index=indice).head(5)\n",
    "        print(indice)\n",
    "        break\n",
    "print(table_KNN.loc[table_KNN.index[indice]])\n",
    "proposition[[\"title\",\"startYear\",\"runtimeMinutes\",\"averageRating\",\"numVotes\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fb00f479-00a2-47ed-8250-09eb93b76826",
   "metadata": {},
   "outputs": [],
   "source": [
    "#détermination du poids des colonnes\n",
    "poids_vote = 0.1\n",
    "dist_min_vote = {}\n",
    "for poids_vote in np.arange(0.1,1.1,0.1) :\n",
    "    X_scaled_poids.iloc[:,285:] = X_scaled_poids.iloc[:,285:]*poids_vote\n",
    "    #print(X_scaled_poids)\n",
    "    indice = table_KNN.loc[table_KNN[\"title\"].str.contains('iron man', case=False)].index[0]\n",
    "    distanceKNN = NearestNeighbors(n_neighbors=6).fit(X_scaled_poids)\n",
    "    dist = distanceKNN.kneighbors(X_scaled_poids.loc[[indice]])\n",
    "    dist_dist = list(np.delete(dist[0][0],[0]))\n",
    "    dist_indice = np.delete(dist[1][0],[0])\n",
    "    #dist_min_vote.append(dist_dist)\n",
    "    dist_min_vote.update( {poids_vote : dist_dist} )\n",
    "from heapq import nsmallest\n",
    "from operator import itemgetter\n",
    "\n",
    "#get the N smallest members\n",
    "smallestN = nsmallest(1, dist_min_vote.items(), itemgetter(1))\n",
    "print(smallestN)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
